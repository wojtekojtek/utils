#!/bin/bash
if [[ -z "$RED" || -z "$GREEN" || -z "$YELLOW" || -z "$BLACK" || -z "$CYAN" || -z "$NC" ]]; then
    RED='\033[1;31m'
    GREEN='\033[1;32m'
    YELLOW='\033[1;33m'
    BLACK='\033[1;30m'
    CYAN='\033[1;36m'
    NC='\033[0m'
fi

QUIET=false
ACTION=""
EFFICIENCY=""

while [[ $# -gt 0 ]]; do
    case $1 in
        -o|--toggle)
            ACTION="toggle"
            shift
            ;;
        --on)
            ACTION="on"
            shift
            ;;
        --off)
            ACTION="off"
            shift
            ;;
        -e)
            if [[ -n "$2" && "$2" != -* ]]; then
                EFFICIENCY="$2"
                shift 2
            else
                EFFICIENCY="toggle"
                shift
            fi
            ;;
        --efficiency=*)
            EFFICIENCY="${1#*=}"
            shift
            ;;
        -q|--quiet)
            QUIET=true
            shift
            ;;
        -h|--help)
            echo "Usage: $0 [OPTIONS]"
            echo ""
            echo "Options:"
            echo "  -o, --toggle     Toggle hotspot state"
            echo "  --on             Turn hotspot on"
            echo "  --off            Turn hotspot off"
            echo "  -e [fast/slow]   Set efficiency mode or toggle"
            echo "  --efficiency=MODE Set efficiency mode (fast/slow)"
            echo "  -q, --quiet      Suppress output messages"
            echo "  -h, --help       Show this help message"
            echo ""
            exit 0
            ;;
        *)
            echo -e "${RED}[ ERROR ]${NC} Unknown option: $1"
            exit 1
            ;;
    esac
done

if [[ -z "$ACTION" && -z "$EFFICIENCY" ]]; then
    echo -e "${RED}[ ERROR ]${NC} No action specified"
    exit 1
fi

[[ $EUID -ne 0 ]] && { echo -e "${YELLOW}[ WARN ]${NC} Need sudo..."; sudo -E "$0" "$@"; exit $?; }

if ! command -v tmux &>/dev/null; then
    echo -e "${RED}[ ERROR ]${NC} tmux is required but not installed. Installing..."
    apt update && apt install -y tmux
fi

if [[ ! -f ./hotspot.sh ]]; then
    echo -e "${RED}[ ERROR ]${NC} hotspot.sh not found in current directory"
    exit 1
fi

if pgrep hostapd &>/dev/null && pgrep dnsmasq &>/dev/null; then
    CURRENT_STATE="ON"
else
    CURRENT_STATE="OFF"
fi

if [[ -f /etc/hostapd/hostapd.conf ]] && grep -q "ht_capab=" /etc/hostapd/hostapd.conf; then
    CURRENT_EFFICIENCY="fast"
else
    CURRENT_EFFICIENCY="slow"
fi

echo -e "${BLACK}[ INFO ]${NC} Current hotspot state: $CURRENT_STATE"
echo -e "${BLACK}[ INFO ]${NC} Current efficiency mode: $CURRENT_EFFICIENCY"

if [[ -n "$EFFICIENCY" ]]; then
    if [[ "$EFFICIENCY" == "toggle" ]]; then
        if [[ "$CURRENT_EFFICIENCY" == "fast" ]]; then
            EFFICIENCY="slow"
        else
            EFFICIENCY="fast"
        fi
    fi
    
    if [[ "$EFFICIENCY" != "fast" && "$EFFICIENCY" != "slow" ]]; then
        echo -e "${RED}[ ERROR ]${NC} Invalid efficiency mode: $EFFICIENCY (use fast/slow)"
        exit 1
    fi
    
    echo -e "${BLACK}[ INFO ]${NC} Setting efficiency mode to: $EFFICIENCY"
    
    if [[ "$EFFICIENCY" == "fast" ]]; then
        sed -i 's/CHANNEL="[0-9]*"/CHANNEL="1"/' ./hotspot.sh
        sed -i '/wmm_enabled=0/c\wmm_enabled=1' ./hotspot.sh
        sed -i '/rsn_pairwise=CCMP/a\ieee80211n=1\nieee80211d=1\nieee80211h=0\nht_capab=[HT40+][SHORT-GI-20][SHORT-GI-40][DSSS_CCK-40]\nbeacon_int=100\ndtim_period=2\nmax_num_sta=10\nrts_threshold=2347\nfragm_threshold=2346' ./hotspot.sh
    else
        sed -i 's/CHANNEL="[0-9]*"/CHANNEL="7"/' ./hotspot.sh
        sed -i '/wmm_enabled=1/c\wmm_enabled=0' ./hotspot.sh
        sed -i '/ieee80211n=1/d; /ieee80211d=1/d; /ieee80211h=0/d; /ht_capab=/d; /beacon_int=/d; /dtim_period=/d; /max_num_sta=/d; /rts_threshold=/d; /fragm_threshold=/d' ./hotspot.sh
    fi
    
    if [[ "$CURRENT_STATE" == "ON" ]]; then
        echo -e "${BLACK}[ INFO ]${NC} Restarting hotspot with new efficiency settings"
        if [[ "$QUIET" == "true" ]]; then
            tmux new-session -d -s "hotspot_control_$$" "bash -c './hotspot.sh -u -q && ./hotspot.sh -q'"
        else
            tmux new-session -d -s "hotspot_control_$$" "bash -c './hotspot.sh -u && ./hotspot.sh'"
        fi
        
        while tmux has-session -t "hotspot_control_$$" 2>/dev/null; do
            sleep 1
        done
    fi
fi

if [[ "$ACTION" == "toggle" ]]; then
    if [[ "$CURRENT_STATE" == "ON" ]]; then
        echo -e "${BLACK}[ INFO ]${NC} Turning hotspot OFF"
        if [[ "$QUIET" == "true" ]]; then
            tmux new-session -d -s "hotspot_control_$$" "./hotspot.sh -u -q"
        else
            tmux new-session -d -s "hotspot_control_$$" "./hotspot.sh -u"
        fi
    else
        echo -e "${BLACK}[ INFO ]${NC} Turning hotspot ON"
        if [[ "$QUIET" == "true" ]]; then
            tmux new-session -d -s "hotspot_control_$$" "./hotspot.sh -q"
        else
            tmux new-session -d -s "hotspot_control_$$" "./hotspot.sh"
        fi
    fi
elif [[ "$ACTION" == "on" ]]; then
    if [[ "$CURRENT_STATE" == "ON" ]]; then
        echo -e "${YELLOW}[ WARN ]${NC} Hotspot is already ON"
    else
        echo -e "${BLACK}[ INFO ]${NC} Turning hotspot ON"
        if [[ "$QUIET" == "true" ]]; then
            tmux new-session -d -s "hotspot_control_$$" "./hotspot.sh -q"
        else
            tmux new-session -d -s "hotspot_control_$$" "./hotspot.sh"
        fi
    fi
elif [[ "$ACTION" == "off" ]]; then
    if [[ "$CURRENT_STATE" == "OFF" ]]; then
        echo -e "${YELLOW}[ WARN ]${NC} Hotspot is already OFF"
    else
        echo -e "${BLACK}[ INFO ]${NC} Turning hotspot OFF"
        if [[ "$QUIET" == "true" ]]; then
            tmux new-session -d -s "hotspot_control_$$" "./hotspot.sh -u -q"
        else
            tmux new-session -d -s "hotspot_control_$$" "./hotspot.sh -u"
        fi
    fi
fi

if [[ -n "$ACTION" ]]; then
    while tmux has-session -t "hotspot_control_$$" 2>/dev/null; do
        sleep 1
    done
fi

if pgrep hostapd &>/dev/null && pgrep dnsmasq &>/dev/null; then
    NEW_STATE="ON"
else
    NEW_STATE="OFF"
fi

if [[ -f /etc/hostapd/hostapd.conf ]] && grep -q "ht_capab=" /etc/hostapd/hostapd.conf; then
    NEW_EFFICIENCY="fast"
else
    NEW_EFFICIENCY="slow"
fi

if [[ -n "$ACTION" ]]; then
    echo -e "${GREEN}[  OK  ]${NC} Hotspot state changed: $CURRENT_STATE -> $NEW_STATE"
fi

if [[ -n "$EFFICIENCY" ]]; then
    echo -e "${GREEN}[  OK  ]${NC} Efficiency mode changed: $CURRENT_EFFICIENCY -> $NEW_EFFICIENCY"
fi
